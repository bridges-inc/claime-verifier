on:
  push:
    branches:
      - main
      - dev
concurrency: this_is_concurrency_workflow

jobs:
  deploy:
    name: CDK deoloy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Setup AWS CDK
        run: npm install -g aws-cdk@1.122.0
      - name: Setup typescript
        run: yarn global add typescript
      - name: Install golang
        run: curl -sSL -o /tmp/go.tar.gz https://storage.googleapis.com/golang/go1.16.3.linux-amd64.tar.gz
      - name: unzip golang
        run: tar -C ${HOME} -xzf /tmp/go.tar.gz
      - name: set gopath
        run: export GOPATH=${HOME}/go && echo ${GOPATH}
      - name: set gopath2
        run: export PATH=${HOME}/go/bin:${GOPATH}/bin:${PATH} && echo ${PATH}
      - name: Setup Dependencies
        run: npm ci
      - name: Build
        run: make build
      - name: Test
        run: npm run test
      - name: CDK deploy dev
        if: github.ref == 'refs/heads/dev'
        run: make deploy
      - name: CDK deploy prod
        if: github.ref == 'refs/heads/main'
        run: cdk deploy -c target=prod --all --require-approval never
      - name: Slack Notification on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_TITLE: Deploy Scucess
          SLACK_COLOR: good
      - name: Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_TITLE: Deploy Failure
          SLACK_COLOR: danger
env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SLACK_CHANNEL: pj-claime-dev
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
